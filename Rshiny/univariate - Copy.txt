# Define the control panel on the left
t1_loanType <- selectInput(inputId = "t1_loanType", 
                           label = "Type of Loans",
                           choices = c("New Loan" = "S",
                                       "Repeat Loan" = "R"),
                           selected = "S")

# Define the variables to be studied in this tab

uv_newloan_predictor_options <- setNames(newloan_factors, 
                            newloan_factors)

uv_repeatloan_predictor_options <- setNames(repeatloan_factors, 
                               repeatloan_factors)

t1_variable_x <- uiOutput(outputId = "Uni_Variable_X")




# Define the navigation bar
univariate_nav <- fluidRow(
  t1_loanType,
  t1_variable_x
)


univariate_main <-fluidRow(
  plotOutput("Univarplot",
             width = "100%",
             height = 400)
  
)


# Server

univar <- function(input, output) {

univar_opt <- reactive({
    if (input$t1_loanType == "S") {
      return(newloan_options)
    } else {
      return(repeatloan_options)
    }
  })  




output$Uni_Variable_X <- renderUI({
  if(input$t1_loanType == "S"){
    options <- uv_newloan_predictor_options
  } else {
    options <- uv_repeatloan_predictor_options
  }
  selectInput(inputId = "t1_variable",
              label = "Variables",
              choices = options,
              multiple = FALSE)
})



# output$Uni_Variable_X <- renderUI({
#    
#   if (input$t1_loanType == "S") {
#     options = newloan_options 
#   } else {
#     options = repeatloan_options
#   }
#     selectInput(inputId = "Uni_Variable_X",
#                 label = "Select variable X from below",
#                 choices = options,
#                 multiple = FALSE)
#   
#   })
#   

univar_data <- reactive({
    if (input$t1_loanType == "S") {
      return(newloan)
    } else {
      return(repeatloan)
    }
  })

output$Univarplot <- renderPlot({
  
  if (input$t1_loanType == "S") {
    ds =  newloan
  } else {
    ds =  repeatloan
  }
  
  if (input$t1_variable == ''){
    p <- fluidRow()
  }else{
    p <- ggplot(ds, aes(x = data[[input$Uni_Variable_X]])) +
      geom_histogram()
  }      
  
  p


})

}
        

  

  
  
  
  